GROUP BY
1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(*) AS `total_students`, YEAR(`enrolment_date`) AS `enrolment_year`
FROM `students`
GROUP BY `enrolment_year`;

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(*) AS `total_teachers`,  `office_address`
FROM `teachers`
GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame

SELECT `exam_id`, AVG(`vote`) AS `avarage_vote`
FROM `exam_student`
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT `department_id`, COUNT(*) AS `total_courses`
FROM `degrees`
GROUP BY `department_id`;

JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT *
FROM `degrees`
INNER JOIN `students`
ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT * 
FROM `degrees`
INNER JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze' AND `degrees`.`level` = 'magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT * 
FROM `courses`
INNER JOIN `course_teacher` AS `ct`
ON `courses`.`id` = `ct`.`course_id`
INNER JOIN `teachers`
ON `ct`.`teacher_id` = `teachers`.`id`
WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT * 
FROM `students`
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`id`, `degrees`.`name` AS `degree_name`, `courses`.`id` AS `course_id`, `courses`.`name` AS `course_name`, `teachers`.`id`, `teachers`.`surname`, `teachers`.`name`
FROM `degrees`
INNER JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` AS `ct`
ON `courses`.`id` = `ct`.`course_id`
INNER JOIN `teachers`
ON `teachers`.`id` = `ct`.`teacher_id`
ORDER BY `degrees`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `departments`.`id`, `departments`.`name` AS `department_name`, `teachers`.`id`, `teachers`.`surname` AS `teacher_surname`, `teachers`.`name` AS `teacher_name`
FROM `departments`
INNER JOIN `degrees`
ON `departments`.`id` = `degrees`.`department_id`
INNER JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` AS `ct`
ON `courses`.`id` = `ct`.`course_id`
INNER JOIN `teachers`
ON `teachers`.`id` = `ct`.`teacher_id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'
ORDER BY `teachers`.`id`;

7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT `students`.`id`, CONCAT(`students`.`surname`, `students`.`name` ) AS `student_fullname`, `courses`.`id` AS `course_id`, `courses`.`name` AS `course_name`, MAX(`es`.`vote`) AS `max_vote`, COUNT(*) AS `exam_attempt`
FROM `students`
INNER JOIN `exam_student` AS `es`
ON `students`.`id` = `es`.`student_id`
INNER JOIN `exams`
ON `exams`.`id` = `es`.`exam_id`
INNER JOIN `courses`
ON `courses`.`id` = `exams`.`course_id`
GROUP BY `courses`.`id`, `students`.`id`
HAVING `max_vote` >= 18
ORDER BY `students`.`id`;